{"version":3,"file":"static/js/415.ab2df892.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,8DCyB5B,IAlDqB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACG,SAAC,KAAD,UACAF,EAAUG,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACX,SAAC,KAAD,WACI,UAAC,KAAD,CACMC,GAAI,CAEFC,SAAS,WAAD,iBAAgBZ,IACtBa,MAAO,CACPC,KAAM,CACFR,SAAAA,EACAS,MAAO,kBAPrB,WAYI,gBACIC,IACIP,EAAW,0CAC8BA,GACnC,sCAEVQ,IAAI,GACJC,OAAO,MACPC,MAAM,SAEhB,uBAAIT,QAvBWV,EADN,OA8Bf,SAAC,EAAAoB,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAOP,C,gMCjDYC,EAAiBC,EAAAA,GAAAA,GAAH,0RAYdC,EAAaD,EAAAA,GAAAA,GAAH,8MAoBVE,EAAoBF,EAAAA,GAAAA,GAAH,4HAOjBG,EAAoBH,EAAAA,GAAAA,GAAH,gVAkBjBI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8G,8ICvDF,SAASM,IACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAaA,OAVAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,mCAAG,uGACYzC,EAAAA,EAAAA,MADZ,gBACNW,EADM,EACNA,QAER4B,EAAU5B,GAHI,2CAAH,qDAMf8B,GACH,GAAE,KAGC,iCACA,4CACA,SAAC,IAAD,CAAc7B,UAAW0B,MAG5B,C","sources":["components/API.jsx","components/MovieList.jsx","components/MovieList.styled.js","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '20b16dffbdf7f9078d49a58427d91733';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import { Outlet } from \"react-router-dom\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport {  useLocation } from 'react-router-dom';\nimport { Link, MoviesCard, TrendMovieList } from \"./MovieList.styled\";\n// import Movies from \"pages/Movies\";\n\n\nconst MainFilmList = ({ movieList }) => {\n  const location = useLocation();\n  \n  return (\n    <div>\n       <TrendMovieList>\n      {movieList.map(({ id, poster_path, title }) => (\n          <MoviesCard key={id}>\n              <Link\n                    to={{\n                        // pathname: `movies/${`${id}`}`,\n                      pathname: `/movies/${`${id}`}`,\n                        state: {\n                        from: {\n                            location,\n                            label: 'Back to Home',\n                        },\n                        },\n                    }}\n                    >\n                  <img\n                      src={\n                          poster_path\n                              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                              : 'https://via.placeholder.com/200x300'\n                      }\n                      alt=\"\"\n                      height=\"300\"\n                      width=\"200\"\n            />\n            <p>{title}</p>\n                  \n                </Link>\n        </MoviesCard>\n      ))}\n      </TrendMovieList>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </div>\n   \n    \n    \n  );\n};\n\nMainFilmList.propTypes = {\n  movieList: PropTypes.array.isRequired,\n};\n\nexport default MainFilmList;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const TrendMovieList = styled.ul`\n  display: grid;\n    justify-content: center;\n    max-width: calc(100vw - 48px);\n    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n    gap: 30px;\n    padding: 0px;\n    list-style: none;\n    margin-left: auto;\n    margin-right: auto;\n`;\n\nexport const MoviesCard = styled.li`\n  border: 1px solid gray;\n  border-radius: 4px;\n  text-align: center;\n  padding: 10px 0px;\n  font-weight: 500;\n    font-size: 20px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\n// export const ProductName = styled.h3`\n//   padding: 4px;\n//   margin-top: 8px;\n//   margin-bottom: 0;\n//   color: black;\n// `;\n\nexport const AdditonalInfoList = styled.ul`\n    list-style: none;\n    display: flex;\n        padding: 0px;    \n        margin-bottom: 30px;\n`;\n\nexport const AdditonalInfoItem = styled.li`\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n    font-size: 20px;\n    text-align: center;\n    padding: 5px;\n    border: 1px solid gray;\n    border-radius: 4px;\n    width: 100px;\n    margin-right: 20px;\n\n      &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n\n  &.active {\n    color: orangered;\n  }\n`;","\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../components/API';\nimport MainFilmList from 'components/MovieList';\n\nexport default function Home() {\nconst [movies, setMovies] = useState([]);\n\n\nuseEffect(() => {\n    const getMovies = async () => {\n        const { results } = await getTrendingMovies();\n\n        setMovies(results);\n    };\n\n    getMovies();\n}, []);\n\nreturn (\n    <>\n    <h1>Tranding today</h1>\n    <MainFilmList movieList={movies}/>\n    </>\n);\n};\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","movieList","location","useLocation","map","poster_path","title","to","pathname","state","from","label","src","alt","height","width","Suspense","fallback","TrendMovieList","styled","MoviesCard","AdditonalInfoList","AdditonalInfoItem","Link","NavLink","Home","useState","movies","setMovies","useEffect","getMovies"],"sourceRoot":""}