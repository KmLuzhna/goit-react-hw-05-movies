{"version":3,"file":"static/js/134.7ba75888.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,8DCyB5B,IAnDqB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,4BACG,wBACAF,EAAUG,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACX,yBACI,UAAC,KAAD,CACMC,GAAI,CAEFC,SAAS,mCAAD,iBAAwCZ,IAC9Ca,MAAO,CACPC,KAAM,CACFR,SAAAA,EACAS,MAAO,kBAPrB,WAYI,uBAAIL,KACJ,gBACIM,IACIP,EAAW,0CAC8BA,GACnC,sCAEVQ,IAAI,GACJC,OAAO,MACPC,MAAM,YAtBTnB,EADE,OA8Bf,SAAC,EAAAoB,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAC,KAAD,QAOP,C,uJC7Cc,SAASC,IAAW,IAAD,EAI9B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,UAAGP,EAAaQ,IAAI,gBAApB,QAAgC,GAuBnD,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCAIZ,qGAC6BpC,EAAAA,EAAAA,IAAekC,GAD5C,OACQJ,EADR,OAEEC,EAAgBD,EAAavB,SAF/B,2CAJY,wBACM,KAAd2B,KADQ,mCAQZG,GACAJ,EAAcC,GACjB,GAAE,CAACA,KAIA,iCACA,2CACI,kBAAOI,SAxBO,SAAAC,GAElB,GADAA,EAAEC,iBACER,IAAeE,EACjB,OAAOO,MAAM,6BAEfb,EAA+B,KAAfI,EAAoB,CAAE/B,MAAO+B,GAAe,CAAC,EAC9D,EAkBK,WACE,kBACEU,KAAK,OACLC,MAAOX,EACHY,SAAU,SAAAL,GAAC,OAAIN,EAAcM,EAAEM,OAAOF,MAA3B,EACXG,WAAS,EACTC,YAAY,kBAElB,mBAAQL,KAAK,SAAb,uBAEuB,IAAxBZ,EAAakB,QACZ,6CAEA,SAAC,IAAD,CACExC,UAAWsB,MAOtB,C","sources":["components/API.jsx","components/MovieList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '20b16dffbdf7f9078d49a58427d91733';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import { Outlet } from \"react-router-dom\";\nimport React, { Suspense } from 'react';\n// import { FilmList, FilmCard, FilmWraper } from 'pages/Home.styled';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n// import MoviePoster from './MoviePoster';\n\nconst MainFilmList = ({ movieList }) => {\n  const location = useLocation();\n  return (\n    <div>\n       <ul>\n      {movieList.map(({ id, poster_path, title }) => (\n          <li key={id}>\n              <Link\n                    to={{\n                        // pathname: `movies/${`${id}`}`,\n                      pathname: `/react-homework-template/movies/${`${id}`}`,\n                        state: {\n                        from: {\n                            location,\n                            label: 'Back to Home',\n                        },\n                        },\n                    }}\n                    >\n                  <p>{title}</p>\n                  <img\n                      src={\n                          poster_path\n                              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                              : 'https://via.placeholder.com/200x300'\n                      }\n                      alt=\"\"\n                      height=\"300\"\n                      width=\"200\"\n                  />\n                  \n                </Link>\n        </li>\n      ))}\n      </ul>\n      <Suspense fallback={<h1>Loading...</h1>}>\n        <Outlet />\n      </Suspense>\n    </div>\n   \n    \n    \n  );\n};\n\nMainFilmList.propTypes = {\n  movieList: PropTypes.array.isRequired,\n  // location: PropTypes.object.isRequired,\n  // page: PropTypes.string.isRequired,\n};\n\nexport default MainFilmList;","import { useState, useEffect } from 'react';\nimport { useSearchParams } from \"react-router-dom\";\nimport MainFilmList from 'components/MovieList';\nimport { getMoviesQuery } from '../components/API';\n\nexport default function Movies () {\n// const location = useLocation();\n    \n    // const [searchMovies, setSearchMovies] = useSearchParams();\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchMovies, setSearchMovies] = useState([]);\n    const [movieQuery, setMovieQuery] = useState('');\n\n    const movieName = searchParams.get(\"query\") ?? \"\";\n\nconst handleSubmit  = e => {\n    e.preventDefault();\n    if (movieQuery === movieName) {\n      return alert('Enter new movie Title ^_^');\n    }\n    setSearchParams(movieQuery !== '' ? { query: movieQuery } : {});\n  };\n\nuseEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    async function getMovieByQuery() {\n      const searchMovies = await getMoviesQuery(movieName);\n      setSearchMovies(searchMovies.results);\n    }\n    getMovieByQuery();\n    setMovieQuery(movieName);\n}, [movieName]);\n    \n    \nreturn (\n    <>\n    <h2>Search Movies</h2>\n        <form  onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={movieQuery}\n                onChange={e => setMovieQuery(e.target.value)}\n                autoFocus\n                placeholder=\"Search movie\"\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        {searchMovies.length === 0 ? (\n          <h3>Find Something </h3>\n        ) : (\n          <MainFilmList\n            movieList={searchMovies}\n            // location={location}\n            // page={'movies'}\n          />\n        )}\n    </>\n);\n};"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","movieList","location","useLocation","map","poster_path","title","to","pathname","state","from","label","src","alt","height","width","Suspense","fallback","Movies","useSearchParams","searchParams","setSearchParams","useState","searchMovies","setSearchMovies","movieQuery","setMovieQuery","movieName","get","useEffect","getMovieByQuery","onSubmit","e","preventDefault","alert","type","value","onChange","target","autoFocus","placeholder","length"],"sourceRoot":""}