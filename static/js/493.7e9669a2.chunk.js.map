{"version":3,"file":"static/js/493.7e9669a2.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,8IC1Bb,SAASC,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWT,IARCE,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBV,EAAAA,EAAAA,IAAaQ,GADlC,OACQP,EADR,OAEEM,EAAYN,GAFd,4CADc,uBAAC,WAAD,wBAKdU,EACD,GAAE,CAACH,IAEAF,EAIJ,OACE,2BACE,0BACE,wBACCA,GAAYA,EAASM,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACtB,2BAEG,gBAAKC,IACIH,EAAY,0CACsBA,GAC1B,sCAEhBI,IAAKH,EACLI,MAAM,MACNC,OAAO,MAEP,uBAAIL,KACJ,uCAAeC,OAZVhB,EADa,SAqBjC,C","sources":["components/API.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '20b16dffbdf7f9078d49a58427d91733';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import { useEffect, useState } from 'react';\n// import { NavLink, useLocation, useParams } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../components/API';\n\n\n\nexport default function MovieCast() {\n  const [filmCast, setFilmCast] = useState([]);\n//   const location = useLocation();\n  const { movieId } = useParams();\n//   const backLink = location.state?.from ?? '/react-homework-template';\n\n  useEffect(() => {\n    async function getCast() {\n      const cast = await getMovieCast(movieId);\n      setFilmCast(cast);\n    }\n    getCast();\n  }, [movieId]);\n\n if (!filmCast) {\n    return;\n  }\n\n  return (\n    <main>\n      <div>\n        <ul>\n        {filmCast && filmCast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n                \n               <img src={\n                        profile_path\n                     ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                              : 'https://via.placeholder.com/200x300'\n                }\n                alt={name}\n                width=\"100\"\n                height=\"\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n            </li>\n        ))}\n    </ul>   \n\n      </div>\n    </main>\n  );\n};\n"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","MovieCast","useState","filmCast","setFilmCast","movieId","useParams","useEffect","getCast","map","profile_path","name","character","src","alt","width","height"],"sourceRoot":""}