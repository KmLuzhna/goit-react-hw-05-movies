{"version":3,"file":"static/js/736.7d01d739.chunk.js","mappings":"6SAEMA,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACRC,EAAAA,GAAAA,IAAA,UAClBF,EADkB,sCACoBD,EADpB,oBADQ,cACzBI,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAc,mCAAG,WAAMC,GAAN,uFACLJ,EAAAA,GAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC2BO,EAD3B,oBADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdG,EAAY,mCAAG,WAAMC,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,oBACaT,EADb,oBADG,cACpBI,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZK,EAAY,mCAAG,WAAMD,GAAN,uFACHN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,oBADG,cACpBI,EADoB,yBAInBA,EAASC,KAAKM,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMH,GAAN,uFACNN,EAAAA,GAAAA,IAAA,UAClBF,EADkB,iBACDQ,EADC,4BACqBT,EADrB,2BADM,cACvBI,EADuB,yBAItBA,EAASC,KAAKQ,SAJQ,2CAAH,qD,wGCM5B,UAnCgB,WACd,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GADWC,EAAAA,EAAAA,MACQC,MAAMF,QAS/B,OAPAG,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACuBR,EAAAA,EAAAA,IAAgBK,GADvC,OACQI,EADR,OAEEL,EAAcK,GAFhB,4CADc,uBAAC,WAAD,wBAKdC,EACD,GAAE,CAACL,KAEF,8BACE,yBACyB,IAAtBF,EAAWQ,QACV,wBACGR,EAAWS,KAAI,gBAAGf,EAAH,EAAGA,GAAIgB,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,2BACE,wBACE,uBAAID,OAEN,uBAAIC,KACJ,oBALOjB,EADK,OAWlB,kDAKT,C","sources":["components/API.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '20b16dffbdf7f9078d49a58427d91733';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMoviesQuery = async query => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieById = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from '../components/API';\n\nconst Reviews = () => {\n  const [reviewInfo, setReviewInfo] = useState([]);\n  const location = useLocation();\n  const movieId = location.state.movieId;\n\n  useEffect(() => {\n    async function getReviewInfo() {\n      const review = await getMovieReviews(movieId);\n      setReviewInfo(review);\n    }\n    getReviewInfo();\n  }, [movieId]);\n  return (\n    <section>\n      <div>\n        {reviewInfo.length !== 0 ? (\n          <ul>\n            {reviewInfo.map(({ id, author, content }) => (\n              <li key={id}>\n                <p>\n                  <b>{author}</b>\n                </p>\n                <p>{content}</p>\n                <br />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No reviews here ^_^</p>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Reviews;"],"names":["KEY","BASE_URL","getTrendingMovies","axios","response","data","getMoviesQuery","query","getMovieById","id","getMovieCast","cast","getMovieReviews","results","useState","reviewInfo","setReviewInfo","movieId","useLocation","state","useEffect","review","getReviewInfo","length","map","author","content"],"sourceRoot":""}